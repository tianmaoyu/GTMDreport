@{
    Layout = null;
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/easy-ui")
<body>
    <style>
        .file-box {
            position: relative;
            width: 340px;
        }

        .txt {
            height: 22px;
            border: 1px solid #cdcdcd;
            width: 180px;
        }

        .btn1 {
            background-color: #D3D3D3;
            border: 1px solid #CDCDCD;
            height: 24px;
            width: 70px;
            text-align:center;
            color:#BD2828;
        }

        .file {
            position: absolute;
            top: 0;
            right: 80px;
            height: 24px;
            filter: alpha(opacity:0);
            opacity: 0;
            width: 260px;
        }
    </style>
    <div id="tbicu">
        <div class="file-box">
            <form action="" method="post" enctype="multipart/form-data"  id="form">
                <input type='text' id='textfield' class='txt' />
                <input type='button' class='btn1' value='浏览...' />
                <input type="file" name="file" class="file" id="fileFieldIC" size="28" @*onchange="document.getElementById('textfield').value=this.value"*@ />
                <input type="button" id="btnUploadicu"  class="btn1" value="上传" />
            </form>
        </div>
       
    </div>
    <table id="dg-IndustryClassificationUpload"></table>
    <script type="text/javascript">
        $("#dg-IndustryClassificationUpload").datagrid({
            url: "#",
            toolbar: '#tbicu',
            fitColumn: false,
            showFooter: true,
            frozenColumns: [[
                { field: 'ID', title: 'ID', checkbox: true },
                { field: 'RegionName', title: '地区', width: 50 },
                {
                    field: 'Date', title: '月份', width: 100,
                    formatter: function (value, row, index) {
                        return value.replace(/(\d{4}).(\d{1,2}).+/mg, '$1年$2月');
                    }
                },
            ]],
            columns: [[
                { field: 'ClassificationName', title: '行业', width: 50 },
                { field: 'IndustryOutput', title: '工业总产值', width: 100 },
                { field: 'IndustrySalesOutput', title: '工业销售产值', width: 100 },
                { field: 'IndustryGrowthOutput', title: '工业增加值', width: 100 },
                { field: 'IGO_GrowthRate', title: '同比增长', width: 100 },
                
                { field: 'AssetsTotal', title: '资产总计', width: 100 },
                { field: 'AT_GrowthRate', title: '同比增长', width: 100 },
                { field: 'DebtTotal', title: '负债合计', width: 100 },

                { field: 'DTG_GrowthRate', title: '同比增长', width: 100 },
                { field: 'Income', title: '主营业务收入', width: 100 },
                { field: 'Inc_GrowthRate', title: '同比增长', width: 100 },
                { field: 'ProfitsTotal', title: '利润总额', width: 100 },
                { field: 'Pro_GrowthRate', title: '同比增长', width: 100 },
                { field: 'VAT', title: '应交增值税', width: 100 },

                { field: 'VAT_GrowthRate', title: '同比增长', width: 80 },
                { field: 'ExpenceInterest', title: '利息支出', width: 100 },
                { field: 'EI_GrowthRate', title: '同比增长', width: 100 },
                { field: 'Stock', title: '存货', width: 100 },
                { field: 'St_GrowthRate', title: '同比增长', width: 100 },
            ]],
            //pagination: true,

        });


        $('#fileFieldIC').change(function () {
            debugger;
            var file1 = this.files[0];
            name = file1.name;
            size = file1.size;
            type = file1.type;
            if (name.indexOf(".xlsx") < 0) {
                debugger;
                alert("请选择*.xlsx的EXCEL文件");
                $(this).val = null;
            }else {
                document.getElementById('textfield').value = this.value;
            }
        });

        $('#btnUploadicu').click(function () {
            debugger;
            var formData = new FormData($('form')[0]);
            $.ajax({
                url: '/IndustryClassificationUpload/Upload',  //server script to process data
                type: 'POST',
                xhr: function () {  // custom xhr
                    var xhr = jQuery.ajaxSettings.xhr();
                    //xhr.upload.onload = function () {
                    //    alert('finish downloading')
                    //}
                    xhr.upload.onprogress = function (ev) {
                        if (ev.lengthComputable) {
                            var percent = 100 * ev.loaded / ev.total;
                            //上传进度
                            //$('#p-icu').progressbar({
                            //    value: percent,
                            //});
                        }
                    }
                    return xhr;
                    //myXhr = $.ajaxSettings.xhr();
                    //if (myXhr.upload) { // check if upload property exists
                    //    myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // for handling the progress of the upload
                    //}
                    //return myXhr;
                },
                //Ajax事件
                //beforeSend: beforeSendHandler,
                success: completeHandlerICU,
                //error: errorHandler,
                // Form数据
                data: formData,
                //Options to tell JQuery not to process data or worry about content-type
                cache: false,
                contentType: false,
                processData: false
            });
        });

        function completeHandlerICU(data) {
            debugger;
            var jsonData = $.parseJSON(data)
            if (!jsonData.errors) {
                debugger;
                $("#dg-IndustryClassificationUpload").datagrid('loadData', jsonData.data);
            }
            else {
                debugger;
                var errors = null;
                $.each(jsonData.errors, function (i, val) {
                    errors += val.ErrorMessage;
                })
                alert(errors);
            }
        }
        //function progressHandlingFunction(e) {
        //    if (e.lengthComputable) {
        //        $('progress').attr({ value: e.loaded, max: e.total });
        //    }
        //}
    </script>
</body>
